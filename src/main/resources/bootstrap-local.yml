server:
  port: 8080

eureka.client.registerWithEureka: false
eureka.client.fetchRegistry: false

# this property is must for feign fallback to work properly
feign:
  hystrix:
    enabled: true

spring:
  cloud:
    config:
      enabled: false

    stream:
      # belows are properties supported by spring cloud stream not specific to any binder
      bindings:
        inbound_channel:
          destination: rtt_sample_topic
          contentType: plain/text
          autoCreateTopic: false  #default is false
          group: rtt_sample_topic_group
          consumer:
            maxAttempts: 2
            concurrency: 3  # Create Seperate KafkaListernerContainer and available partitions will be distributed amongs consumers
            backOffInitialInterval: 1000
            backOffMaxInterval: 8000
            backOffMultiplier: 2

        outbound_channel:
          destination: rtt_sample_topic
          autoCreateTopic: false  # default is false
          producer:
            partitionKeyExpression: headers['eventId']

      kafka:
        # kafka specific properties
        binder:
          brokers: localhost:29092
        bindings:
          outbound_channel:
            producer:
              sync: true

          inbound_channel:
            consumer:
              group: rtt_sample_topic_group
              autoCommitOffset: true
              autoCommitOnError: true
              enableDlq: false
              configuration:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                max.poll.records: 50 # No of records fetched in single poll request